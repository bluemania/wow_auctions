:mod:`pricer.utils`
===================

.. py:module:: pricer.utils

.. autoapi-nested-parse::

   It contains small functions to support data pipeline.

   * Loads and writes raw and cleaned files, changes data formats



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   pricer.utils.get_seconds_played
   pricer.utils.generate_new_pricer_file
   pricer.utils.source_merge
   pricer.utils.read_lua
   pricer.utils.load_items
   pricer.utils.get_general_settings
   pricer.utils.get_and_format_auction_data
   pricer.utils.get_item_codes
   pricer.utils.write_lua
   pricer.utils.dump_lua
   pricer.utils.read_multiple_parquet


.. data:: logger
   

   

.. function:: get_seconds_played(time_played: str) -> int

   Convert string representation of time played to seconds.


.. function:: generate_new_pricer_file() -> None

   Generates a blank pricer file of items of interest.

   This is used to fill in the latest pricing info from booty bay gazette.
   This is done in game using a self build addon with the /pricer command


.. function:: source_merge(a: dict, b: dict, path: list = None) -> dict

   Merges b into a.


.. function:: read_lua(datasource: str, merge_account_sources: bool = True, accounts: list = ['BLUEM', '396255466#1']) -> dict

   Attempts to read lua and merge lua from WoW Addon account locations.


.. function:: load_items() -> dict

   Loads user specified items of interest.


.. function:: get_general_settings() -> dict

   Gets general program settings such as mappings.


.. function:: get_and_format_auction_data() -> pd.DataFrame

   Read raw scandata dict dump and converts to usable dataframe.


.. function:: get_item_codes() -> dict

   Read BeanCounter data to create code: item mapping.


.. function:: write_lua(data: dict, account: str = '396255466#1', name: str = 'Auc-Advanced') -> None

   Write python dict as lua object.


.. function:: dump_lua(data: Any) -> str

   Borrowed code to write python dict as lua format(ish).


.. function:: read_multiple_parquet(loc: str) -> pd.DataFrame

   Scan directory path for parquet files, concatenate and return.


