:mod:`pricer.utils`
===================

.. py:module:: pricer.utils

.. autoapi-nested-parse::

   This file contains shorter utilities to write/save raw files, and change data formats



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   pricer.utils.get_seconds_played
   pricer.utils.generate_new_pricer_file
   pricer.utils.source_merge
   pricer.utils.read_lua
   pricer.utils.load_items
   pricer.utils.get_general_settings
   pricer.utils.get_and_format_auction_data
   pricer.utils.get_item_codes
   pricer.utils.write_lua
   pricer.utils.dump_lua
   pricer.utils.read_multiple_parquet


.. data:: logger
   

   

.. function:: get_seconds_played(time_played: str) -> int

   Converts a string representation of time played to seconds


.. function:: generate_new_pricer_file()

   Generates a blank pricer file of items of interest. This is used to fill in the latest pricing
   information from booty bay gazette. This is done in game using a self build addon with the /pricer command


.. function:: source_merge(a, b, path=None)

   merges b into a


.. function:: read_lua(datasource: str, merge_account_sources=True, accounts=['BLUEM', '396255466#1'])

   Attempts to read lua from the given locations
       


.. function:: load_items()

   Loads and returns the user created YAML file of interesting items and their stack sizes
       


.. function:: get_general_settings()

   Gets general program settings
       


.. function:: get_and_format_auction_data()

   Reads the raw scandata dict dump and converts to usable dataframe
       


.. function:: get_item_codes()

   Reads the beancounter database and produces codes per item dict


.. function:: write_lua(data, account='396255466#1', name='Auc-Advanced')

   Write python dict as lua object


.. function:: dump_lua(data)

   Borrowed code to write python dict as lua format(ish)


.. function:: read_multiple_parquet(loc)

   Given a directory path, scan for parquet files,
   Load and concatenate, returning the full dataframe


